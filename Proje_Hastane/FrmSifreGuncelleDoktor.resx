<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEBASEBAVFhAVFQ8QEBUQFRAPEA8VFREWFxUVFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhcQEBstJiAdLS0tLSsrLS0tLS0t
        LS0tLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACoASwDASIAAhEBAxEB/8QA
        HAAAAQQDAQAAAAAAAAAAAAAAAQACBQYDBAcI/8QAPhAAAQMCBAMGAgcHBAMBAAAAAQACAwQRBQYSITFB
        UQcTImFxgTKRFCNCYqGxwTNSY3KC0fAVU7LhQ5LxJP/EABgBAAMBAQAAAAAAAAAAAAAAAAABAgME/8QA
        JBEAAgICAgICAwEBAAAAAAAAAAECERIhAzFBURMiMmFxoZH/2gAMAwEAAhEDEQA/AOxWRRCcAtmzOgAI
        2RsjZIdASRslZIBtkQkkgBJJIoGBJFKyBDdKFlkSTsKMd0QUSEwhAGRK6YCnApAG6V0ECgB10ky6WpOg
        syIJoKN0gEgUUigGMSSSVCGlJEoJiEkkkmA1ybdFyamSwppRTHJoQ0pt0ShZWiWSACcEgiuY3EgkkgYr
        ooJBACKBKKa4IELUkCsZSVYisyFyHehada8gbLSpnHiTsrXHash8lOiTnqwwXcbDzWOPEo3cHD5p9bRs
        niLTwPAqAOVgPhcR7oiotbCTkuiysnB4FOJCqbqCoj+F5I806LGpGG0jT6hP4vQvk9loumOlA5qEdjbX
        N8Lt+hXOs65prIie6YdP73EJri9ifJ6Oviqb1Ce2UHmvMEmfa8H4j8lv0HarVxka26h7hD44ryNSl6PS
        SC49g/bFE6wlBafmFeMKzvSzgaZW/MJfG/A815LSlda0Faxw2cFnuoaKTsfdIpl0bpUMKSV0EAIoIoJi
        EgUUCmAwoJxTUyBJpCcgU0BjKCdZBWSSKCQRXMdAkLIpIASCNkkACyRRKAQBicExzrLO4LVqG7K47Ilo
        1qh91oTQvt4U7Wbrfpx1XR+KMO2a2DPe0WcplrrrRkbY7LZhWM1ezWGtGR7VGYlTMLTcKTleGi5UHX4l
        G9jgHC+4Rx2HJRxjOGYX01QWsNwCpHLGZ46ohkgGo8jzVMz9TvFTI4jYk2PJQODYj3UrHcgRwW7kk6Zk
        oXG0d9qcn0szb92ATzAVRxjs3AuY9wuk5Tqmz07HNN7gKZkoweSHKhKN7R5sxHJsjL+FQklBNCbtLgR0
        uF6arsGa4bi6q2KZSa69mopMeUkclwjPFZTkXeXNHJy6Jl3tZY6zZvCfPgoHFsmjewsVU6/LMjODT7Ip
        ha/h6QwvMkMwBa8G/QhTEczTwK8nU1dUUxux7hb1VrwPtSmiIEwuOoUSgilKX9PRSSoeXe0SnnAGsB3Q
        7FXKmrmPF2uChwaKU0zaSQBRUliQKKaSgQCgkgmSJAolApoBpTSE4pqoTJFJJFcxuBFJJACQRSQAkEUk
        ABMe24T0CmhEZJTjUs7W2RmKxFxW+2jHSZnLbpzVpiRyyCUpOLGpIzzR6mkKjY3lCS7nQSEXudJ4K6d8
        Uu/6pxuIpUzheO4TMLtmYfcXHzVGxXAHsNw02+YXpnF6VsjTdoK5/jGHtZe4sPPgtaUlszTcXoq/Zfma
        SmeIZbmMnwnk1d8oqlsjQQeK4hTUUOq4sD5LoeVJ3gBt7jkUpxtDjJplydGteWnB5LYY/bdOKwUmjZpM
        g6zDmuG4BUHVZfa69vkd1dHxgrUfT+S2jOzKUKOU45lEG92e4VBxjKbm3LRcL0TUwgjcKFny+yTUfh/X
        2V99kddHmySmliNxcEdLhWLAM/VNMQHOLm9DxVyzHgjWSmN7QQd2uAsCqhiuV+JZuowa/Fl5p/kjquWO
        0yCazXu0u6Eq/UeIskALXA+68jVFJJEeYI9lPZezxU0xA1FzehUtrqWisX3F2epg5Fc1yr2kwz2a92l3
        Ryv1LWskF2uCTg0CkbRQRumlSMSBQSVUACgkUFRJI3RWHUiHrno3syopgcjdIBySSSQxLj+ae0WtlqYK
        fDGftjIKcM0OnqWtcWiUueC2OIlryOeluolt7DrVTIGi54XA9ua4HkOR1HjjqSoce+ZDU4dTvdZouTrp
        3N6Bzdh/OOqpLyJl0w7LONybz4/3cn2mQxCdrD01HSPwUsMDxmAF4xuKYW+GqpGNbt96N2pbdPUkASN4
        cJBzY4cbhPqsQMg0tN+q1+HfZl8v6IWnzrUsc5tXQsmDDpllwmVtX3ZvY66ckSsA81ZsDxylrGa6Wdkg
        HxNHhkj8nxnxN9wuWZ0yPJLOKuikMVULXs50esgWDmvG7XW2WLA8GxKeZv06meyYfBiNM+GCriO28hab
        VDdgCHDVa+6ThJdDyiztJjSY4Kk4dm6ejmZSY1oAftTV8Y001T5Si1opOvLyA3N4kg6JKV9ja9DwwFAw
        josLXFqzsmuhpoE0xjqcKFxrA2ysIsrBqTSiM2hOCZ56zjgE9O4ujJ0+V1D4B2hVNI+zhrbzB2PsV6Hx
        nCWStIIG64bn3JBjLpI27cTZb25L6mSSi/sdGyr2s0NQQyZ/cvP+7YMP9fD5ro0OiRocxwIO4LSCCvFM
        kZabEbqcyvnCtoHg0tQ5rL3dG7xwu63YdvcWPmuWTt+mdKjSPXL4HDhv+BWBx6i3qo/KeZm1dPHI4APc
        0F2k3be3JT5s4cihuUXUkJVJaIqWMFaEvgBHEKbloh9k2/EKOmoXk2PDqN1tCa9mUoMpeP4aZjqPIHSu
        Y4xLNFKQAbLv9RghLfC75qnY/lxwu57AR1WsZp9GcoNHKy9sw8bN+qiMQwEblh/uug4jRwxxucLX3XNq
        3GSJDbgnKq2KKleiJfG+N3MEdNla8sZ/qKYgPcXM8+IUYKpkos4C/VadXhZG7dx5LJwcdw69GualqfZ6
        EyvnuCpaPGA7mDxVximDhcFePqapkicCxxa4dNl0nJ3aY+MtZUHbYav7oUoy10wcXH9o72U0qKwbHY52
        BzHA36FSt0VQWmBBEhBMRtoXRKx3WRo3Q+6c0nksN1npxcbczpPkALlKWkNOwa3ONo2g22LnbMHkObj+
        HmsraZ32pD/SA0fqfxWw0WRWWRpRp1dGHMIF78Rck7rnHaHkr6exksLu7xCEWhffQJQ03Eb3fZIO7Xci
        d+o6hNIGtLjwAJVPjxBxc5zhfck6eNr8bLbiWSaZlyPFpopeTc5OfMaesb3OJsIjnjltGyu6OZfZkxuD
        p4OvdvxEC9to2Os+JwBJ0lj/AAODtyWlp3Dtjt5KFzNlyjxJlpmXLRaOaM6ZovK/Mb/C4EeSpWL4TiNP
        F3NVCMUoBbQ5t466CwIaWu3dcXNgddvJVcodk1GXR1aONrmgngdwRu0+YI2Kyx0t9gdlQOzfOuF00Jpf
        pcsYD3lseJNbE6C58TA9jdFtVzuQdzsum0WJ08g1RSwOadwY5I3A+d2pPm9DXF7NDF8uxVdPJTVDNUUg
        /qjd9mRh5OB/sdlROyrMM0FTPgtc7VJA6RlJIftsjF+733to8bfu3HILoGM5ro6VhfPVxNtchrXCSV9u
        TWNu4+wXF8vY67EcdgfBHZzqt9dK61zDBHA2JrHkbXLG78tUgAWV3bZpVaR3tzAVhfB0WwkhNoGjT3CI
        etlzUx0SvJE0zHqUXi+GtlaQQpbuk10F1UZUyXG0edc/5OMbnPjbtx2XOHsINjxXrfFsvd6CDY+q4pn/
        ACE+EmRjduNgqnFT67JhJw0+iFyHneSieGOJMJO4/d8wvQ+XsdjqY2vjcNwDsvI8kZabHirZkfN8lHIA
        STGTuOnmEoyv6y7KlGvtE9TiZw809tSOar+WswRVUbXMcDcBTRCiUEnspStaNnvgofHqhro3N43BAW1J
        F0WlLR3vdVCEU7JnJtUcczDhMpDgL73XOsSwSRhJIXpapw0cwoPGcrQTMddtjY7jZbtKSpmKbi7R50ax
        zTwUpR15bs7gn5hpxTzujB1AKNmqARspWMNWaNOdWidkw+OcXZYO6dVA1lA+M2IKVJXuYQQVOPxVkrLP
        G6X05Bffj/hiyxmuakeLOJZzBXdcoZyiqmDxeLmOYXnKrjAOy3stYq+nma5psLi6UW08ZFSimsonq9r7
        p11XssYn30TXX4gKbuqaM0yUe1a71uELBMxc8WdEkaxK1sv1t+8aTu2aW9+hJA/EhYMVrxFYcyqrRY2G
        1Mh+y4+Meo3P+dVs4XExypnULpXUTRYjrbxuRa/3geDvQ2PoQRyW0Kgc/kubBnRmjSzJK4MAb8J2d+ir
        MBLSXfZHFSeLYoNRbsbfEOXooypmaWARu+K5sSNW3Hb3XXxxxjRzTds08WpXTESUtQYJm8HtDZIpbcpW
        H4h5ixC1qfMlTCQ2uo3dPpFFeendtxcz44/e61JQ5huxxB5AcDv0ViwZszmjUzc73GwVNE2ZJsJo8QDO
        +popQRZr3x6JQPJ1g4LVqOxjCHA6YJGE82zSm3oHEq+U0AbG1tuW/rzVXzZissBhjp/200jIowSSAOL3
        kdA0H5hctZy0dF4LZUm9ieHMdd09U9vHTriY0+pDLqewzD6XDbNp6R7GEsNo2PeZLB3jlldu/dws0mws
        TYK2sibxIfq2JN76j5b7fgnOka3fW5v8wJQq9A7ZGQ5ppj8Ti09Hghbn+swbHvW2PA3G6Ta6CQeJzCP4
        jC3/AJBYP9LppJbiGNzWtId3ZFg4kWuB5X+af18pi34YMWzLS00XfTSgRAta57QXhuo2F9NyBcgXUdSd
        oWFyGza+Efzu7v8A5WUf2j4JQswuufI0xgQv0EF+8v8A4hY8byaR7rzhgGD/AEqYxCeGI6XPDqh/dRuI
        t4QbcTf8CpbXgpX5PXVJisEoBinjePuPY78itteQKDLtVJTS1kLQYYSRI5r2B7bWuQ29yNxuFO0mYMco
        A0CSoa0gFrZW980gi4+IGyK/THZ6lDlF41QNmYWkXXC6PtsxGI2qIIn+rXwv/P8ARWXD+3andYVFJIw8
        zE5sjR87FEXTtMUlaKl2g5NMTnPY3w7k2XOZIS08F3/Ec+YTWRkd/pcRwla5h+Z2XLcYoYtZMb2uYTsW
        kGy6XFciMFNw/hH5XzVNRyBzHHTfdvIr0PkzOMNbECHAPAGpp4grzZX4K9rdbW3Zx25JuA4zLSytfG4g
        gi/Q+RUW7xn/ANLpNZRPXuoJGyp+R80trIW3Nn23HmrTuhwoFOwyxAqHxPD3FrtB4qTllIChqvFSDwVx
        TIlRw3OOSqtsr5dOppJO3FUeWFzSQ5pB816XnxUP8LgouryjTVAJcwXKU+JS2OPI46PPCfG6y6Lmbs67
        u7oTt0VSiy1M51g0rH4ZRdo1+WLWyJlfdPpIXOeABvcK5UGQ5j8QVwy1kIRuDni5Wvx28myHy6pFo7Pq
        R0dOwO6BXG60KSDQ0ADgtsFamJPkJrmrIU0rgO0p+bMPc4lw6fkuWYrXOilF9iOPRy73VU4cLFUDN+UW
        ztO1nciOa6+Oaao5eSLTIvLeZWlrbv2HwO46b2uD93YXHkOYCtMuJkh1iAbAkXvYciOoPX9bhcPraapo
        JTqaSy+/R3/asuDYy2drdLibbAAgPYTwseRvtY7G423WlEJ6LVJMdZN+PFcjztmCR9Y4xucwRnQzSS0+
        Emztue5+avWIYjLA1zi3XsS1zRsdgQXt5bEG4uPTgqDUxQ1RJa7u5jclr9g4/dPNKStaKi6dslMH7RX+
        BlbH3rRb6xn1cw9bDS75D1XdMj43BWxd5Tlxa2zXBwALT0JBIv7rzSMrVW2mFzgdhp3uvTXZllv/AE/D
        oYnD65/105++4Dw+wsPZYSclH7GyUW9Foe8AKqVWDTT1bagSMY1jJGwOI7w947Yutwty4rcxGds0wgd+
        zc2Rrj5lth+aOFOfHGGE+JvhdzaS3a/ulCLitdilJN76MDMcdC4R10fdOOzZBd1NIfJ/2T5OsVMFwcLg
        3HEEb3SlEc0bopGgtcC1zXbtcD0KrGJ4ZLRRPkgmIgjaZHsfvoa0XNr8dkKm6emD0vaLRbrv6rShwmJh
        cYwWFx1O7tzm6j1PVDL2IGpp45yws13s08QGkt39dN/dSJai60OrOd9oeUMSro3RQ17Po1w4QSMLS8ix
        GuUXvYi42C5LiHZTisQv9GEg/gvY8/I2K9OWQISaTHbR5EqctV0RLX0dQ08/qpCD7gWQM1dEQ4moZpsQ
        X96ALcPiXrqyZJGCLFoI8wCEY+mDl7R5kb2mV5bpm7iccP8A9EEbz8xZQ2I4xFNuaKKNx5waox/63svT
        eIZSoJ/21HC49dDWu+Y3VYxHsfwyS+hkkR/hvcQPZ1wnUvYrj6POj7cr+6TXkcCR6LsWJdhp409Z7TM/
        Vv8AZVXE+yfEobkRskA/2nXJ9jZQ4y8f4XlErlDmOoiaWBwLDyeA5R0sgcSTsTvtwWxWYNUREiWCRpHG
        7XfmtIsPMFGU+mCUe0XzKGZGU0YsTrBubcwvQeXsRbU08czDcOAK8p4Hg09RI1kMbiSQNgbD1K9TZOwn
        6LRww82tF/Xmt5O42zFRqWmSksdwoWsw25JVgKaWhTGdDlGylz4WRyWu8PZwBV4fACsElC08lopohwZz
        vEJHuFrFNwPCTqu5qvrsLZ0WWKia3gE80LFkdDRtAGy3oogOSzmNINRYYjDGm6FmTbJWOiZKBRQXGdQC
        FgmhDhYhZ1jfImr8CdFbxjAGSNIewOaevJcxx3s4fG8y0MhY8XOm9vYf9rtk5uAtSSAFdMJ62c8oU9HE
        6PMb4iIsRgLTfaSxMRO5BdzZcueLjgJDw0hZ63KFJVt1wSNsRcPaRbl4iRtfSWuNwT4ZNxpXVK3BopWl
        sjGuHRwB/wA/+KoVXZ3G15kpZHwPO/1Zs0+reBG52PUq9Mm2iFyXh81DVN790j4QCQzkDvzN2ixa4fEO
        BXXYMdhlb4XEEjg6x+bmkt/Fc4ioMRh4uZMOpvFJy5i4vdrTw4t8ytmGR1/raVwPox7Rt1G9uI9COgUz
        hlX6HGdFimpT3pe0/LdbUOocQb8SoOmjj4tY4XA/fafe3yPzCkoqcHi1xH3nvP5uTt+hUiQfVtYLuIHr
        b/PmtCrM1UWxAWgu1/1jSRdpuHb/ABWNiB8NwDd3BSdFFEzcQt1fvEC49+K32G+/M8Vm2/RaV+R1LTtj
        YyNgsxjWsaOgAsFlSCKxNhpCBanFBADdCBYnpJ2IxFiGhZkk8gow6EDGs6BRkFFfxCjaXbtB9QCtamwC
        mcTqgjPq0KUrfiRoRuV039TnrYKTDIYv2cTW/wAoAUgExwRaVi3ZqtGRNcUUkigApJWTUCEQgQnJqYmN
        QITrIJoRjIQsnkIWVCaJVBEIFcp0AJWo077racFqPZZXEmQJOKaimErRIyGvT2RJjeK3Im7joiTpDirM
        MtILLUNG08vVSdQ9a7AlGTocoqzSFAE4Ui37f4U9oHT5bp/IxfGjRNP1W2wAJ747nbf8CsUsdgeIU5ZD
        xozAoqObIQsrKhN8bBTRuJLC2YJ4eopl2h1kkg5JIBJJI3QACmSusEpJQFpyyXVxjZMpUa025JWxRM5r
        G1lyt6NlgtZulRlBbsDgkGpySzNKEkkigYEEUkAMKCeQhpQS0MQTiEExDShZOKaqQEoggkuY3Emuakkg
        DXki6LC7zCSS1g7MpLyFrVuavDskklMcTWI3Tr7hJJMRmTSEklBoFuybUvJFh7oJJrsT6NPR1S7tJJa5
        MyobYoh5SSVkvQRMU76QUkkYoMmL6QU10xSSRigyZjLuqTWk8Ekk3pCW2bkMVlkSSWF2bUNKSSSADZIo
        pIACSSSAAkkkmA1NcEkkxMa4JtkUk0Sf/9k=
</value>
  </data>
</root>